import pygame

pygame.init()

screen = pygame.display.set_mode((800, 600))
pygame.display.set_caption("Mario Game")

background_image = pygame.transform.scale(pygame.image.load('map.png'), (800, 600))
lobby_background_image = pygame.transform.scale(pygame.image.load('loby.png'), (800, 600))

mario_image = pygame.image.load('mario.png').convert_alpha()
mario_image = pygame.transform.scale(mario_image, (50, 50))
mario_image.set_colorkey((0, 0, 0))  # RGB (0, 0, 0) 색상을 투명하게 설정

stand_image = pygame.image.load('stand.png').convert_alpha()
stand_image = pygame.transform.scale(stand_image, (50, 50))
stand_image.set_colorkey((0, 0, 0))

mario_image_flipped = pygame.transform.flip(mario_image, True, False)
mario_image_flipped.set_colorkey((0, 0, 0))
stand_image_flipped = pygame.transform.flip(stand_image, True, False)
stand_image_flipped.set_colorkey((0, 0, 0))

block_rect = pygame.Rect(200, 400, 100, 20)
pipe_rect = pygame.Rect(400, 450, 100, 50)

scene = "main_menu"
running = True
mario_x, mario_y = 50, 470
mario_velocity_y = 0
gravity = 0.001
jump_strength = -0.5
on_ground = True
move_speed = 0.1
facing_right = False
moving = False

def draw_lobby():
    screen.blit(lobby_background_image, (0, 0))

def draw_game_scene():
    screen.blit(background_image, (0, 0))
    if moving:
        current_mario_image = mario_image if facing_right else mario_image_flipped
    else:
        current_mario_image = stand_image if facing_right else stand_image_flipped
    screen.blit(current_mario_image, (mario_x, mario_y))
    pygame.draw.rect(screen, (200, 200, 200), block_rect)
    pygame.draw.rect(screen, (100, 100, 100), pipe_rect)

def handle_keys():
    global mario_x, mario_y, mario_velocity_y, on_ground, facing_right, moving
    keys = pygame.key.get_pressed()
    moving = False  
    if keys[pygame.K_a]:  
        mario_x -= move_speed
        facing_right = True
        moving = True
    if keys[pygame.K_d]: 
        mario_x += move_speed
        facing_right = False
        moving = True
    if keys[pygame.K_w] and on_ground:  
        mario_velocity_y = jump_strength
        on_ground = False
        moving = True

def handle_collisions():
    global mario_y, mario_velocity_y, on_ground
    mario_rect = pygame.Rect(mario_x, mario_y, 50, 50)

    if mario_rect.colliderect(block_rect) and mario_velocity_y > 0:
        mario_y = block_rect.top - 50
        mario_velocity_y = 0
        on_ground = True
    elif mario_rect.colliderect(block_rect) and mario_velocity_y < 0:
        mario_y = block_rect.bottom
        mario_velocity_y = 0
        on_ground = False
    elif mario_rect.colliderect(pipe_rect) and mario_velocity_y > 0:
        mario_y = pipe_rect.top - 50
        mario_velocity_y = 0
        on_ground = True
    elif mario_y >= 470:
        mario_y = 470
        mario_velocity_y = 0
        on_ground = True
    else:
        on_ground = False

while running:
    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            running = False
        elif scene == "main_menu" and event.type == pygame.KEYDOWN and event.key == pygame.K_RETURN:
            scene = "main_game"

    if scene == "main_menu":
        draw_lobby()
    elif scene == "main_game":
        handle_keys()
        mario_velocity_y += gravity
        mario_y += mario_velocity_y
        handle_collisions()
        draw_game_scene()

    pygame.display.flip()

pygame.quit()
